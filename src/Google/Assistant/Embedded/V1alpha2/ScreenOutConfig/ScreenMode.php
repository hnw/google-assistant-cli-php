<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

namespace Google\Assistant\Embedded\V1alpha2\ScreenOutConfig;

use UnexpectedValueException;

/**
 * Possible modes for visual screen-output on the device.
 *
 * Protobuf type <code>google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode</code>
 */
class ScreenMode
{
    /**
     * No video mode specified.
     * The Assistant may respond as if in `OFF` mode.
     *
     * Generated from protobuf enum <code>SCREEN_MODE_UNSPECIFIED = 0;</code>
     */
    const SCREEN_MODE_UNSPECIFIED = 0;
    /**
     * Screen is off (or has brightness or other settings set so low it is
     * not visible). The Assistant will typically not return a screen response
     * in this mode.
     *
     * Generated from protobuf enum <code>OFF = 1;</code>
     */
    const OFF = 1;
    /**
     * The Assistant will typically return a partial-screen response in this
     * mode.
     *
     * Generated from protobuf enum <code>PLAYING = 3;</code>
     */
    const PLAYING = 3;

    private static $valueToName = [
        self::SCREEN_MODE_UNSPECIFIED => 'SCREEN_MODE_UNSPECIFIED',
        self::OFF => 'OFF',
        self::PLAYING => 'PLAYING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ScreenMode::class, \Google\Assistant\Embedded\V1alpha2\ScreenOutConfig_ScreenMode::class);

