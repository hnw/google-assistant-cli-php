<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

namespace Google\Assistant\Embedded\V1alpha2\AudioOutConfig;

use UnexpectedValueException;

/**
 * Audio encoding of the data returned in the audio message. All encodings are
 * raw audio bytes with no header, except as indicated below.
 *
 * Protobuf type <code>google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding</code>
 */
class Encoding
{
    /**
     * Not specified. Will return result [google.rpc.Code.INVALID_ARGUMENT][].
     *
     * Generated from protobuf enum <code>ENCODING_UNSPECIFIED = 0;</code>
     */
    const ENCODING_UNSPECIFIED = 0;
    /**
     * Uncompressed 16-bit signed little-endian samples (Linear PCM).
     *
     * Generated from protobuf enum <code>LINEAR16 = 1;</code>
     */
    const LINEAR16 = 1;
    /**
     * MP3 audio encoding. The sample rate is encoded in the payload.
     *
     * Generated from protobuf enum <code>MP3 = 2;</code>
     */
    const MP3 = 2;
    /**
     * Opus-encoded audio wrapped in an ogg container. The result will be a
     * file which can be played natively on Android and in some browsers (such
     * as Chrome). The quality of the encoding is considerably higher than MP3
     * while using the same bitrate. The sample rate is encoded in the payload.
     *
     * Generated from protobuf enum <code>OPUS_IN_OGG = 3;</code>
     */
    const OPUS_IN_OGG = 3;

    private static $valueToName = [
        self::ENCODING_UNSPECIFIED => 'ENCODING_UNSPECIFIED',
        self::LINEAR16 => 'LINEAR16',
        self::MP3 => 'MP3',
        self::OPUS_IN_OGG => 'OPUS_IN_OGG',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Encoding::class, \Google\Assistant\Embedded\V1alpha2\AudioOutConfig_Encoding::class);

